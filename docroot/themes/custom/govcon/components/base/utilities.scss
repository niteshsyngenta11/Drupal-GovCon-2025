@use '@base/mixins.scss' as mixins;
// Variables
$container-width: 1400px;
$container-wide: 1920px;
$container-fluid-width: 100%;
$spacer: 1rem;

// Container Classes
.container,
.content-region > *,
#content-moderation-entity-moderation-form {
  max-width: $container-width;
  width: 100%;
  margin: 0 auto;
  padding-left: 16px;
  padding-right: 16px;
}

.container-fluid {
  width: $container-fluid-width;
  margin: 0 auto;
}

body {
  &:not(.node-type-landing_page) {
    .content-region {
      padding: 32px 0;

      @include mixins.media-breakpoint-up(md) {
        padding: 48px 0;
      }
    }
  }

  &.node-type-landing_page {
    .content-region {
      > * {
        padding-top: 32px;
      }

      > article {
        max-width: none;
        padding: 0;
      }
    }
  }
}

// Spacing values
$space-values: (
  0,
  4,
  8,
  16,
  24,
  32,
  40,
  48,
  56,
  64
);

// Generate margin and padding classes
@each $space in $space-values {
  .m-#{$space} {
    margin: #{$space}px !important;
  }

  .mt-#{$space} {
    margin-top: #{$space}px !important;
  }

  .mb-#{$space} {
    margin-bottom: #{$space}px !important;
  }

  .ml-#{$space} {
    margin-left: #{$space}px !important;
  }

  .mr-#{$space} {
    margin-right: #{$space}px !important;
  }

  .mx-#{$space} {
    margin-left: #{$space}px !important;
    margin-right: #{$space}px !important;
  }

  .my-#{$space} {
    margin-top: #{$space}px !important;
    margin-bottom: #{$space}px !important;
  }

  .p-#{$space} {
    padding: #{$space}px !important;
  }

  .pt-#{$space} {
    padding-top: #{$space}px !important;
  }

  .pb-#{$space} {
    padding-bottom: #{$space}px !important;
  }

  .pl-#{$space} {
    padding-left: #{$space}px !important;
  }

  .pr-#{$space} {
    padding-right: #{$space}px !important;
  }

  .px-#{$space} {
    padding-left: #{$space}px !important;
    padding-right: #{$space}px !important;
  }

  .py-#{$space} {
    padding-top: #{$space}px !important;
    padding-bottom: #{$space}px !important;
  }

  .gap-#{$space} {
    gap: #{$space}px;
  }
}

// Auto margin classes
.m-auto {
  margin: auto !important;
}

.mt-auto {
  margin-top: auto !important;
}

.mb-auto {
  margin-bottom: auto !important;
}

.ml-auto {
  margin-left: auto !important;
}

.mr-auto {
  margin-right: auto !important;
}

.mx-auto {
  margin-left: auto !important;
  margin-right: auto !important;
}

.my-auto {
  margin-top: auto !important;
  margin-bottom: auto !important;
}

// Centering Utilities
.mx-auto {
  margin-left: auto !important;
  margin-right: auto !important;
}

.visually-hidden {
  visibility: hidden;
}

// Display Utilities
.d-none {
  display: none !important;
}

.d-block {
  display: block !important;
}

.d-flex {
  display: flex !important;
}

// Flexbox Utilities
.flex-row {
  flex-direction: row !important;
}

.flex-column {
  flex-direction: column !important;
}

.justify-start {
  justify-content: flex-start !important;
}

.justify-center {
  justify-content: center !important;
}

.justify-end {
  justify-content: flex-end !important;
}

.justify-between {
  justify-content: space-between !important;
}

.align-start {
  align-items: flex-start !important;
}

.align-center {
  align-items: center !important;
}

.align-end {
  align-items: flex-end !important;
}

// Overflow Utilities
.overflow-hidden {
  overflow: hidden !important;
}

.overflow-auto {
  overflow: auto !important;
}

.overflow-scroll {
  overflow: scroll !important;
}

// Position Utilities
.position-static {
  position: static !important;
}

.position-relative {
  position: relative !important;
}

.position-absolute {
  position: absolute !important;
}

// Border

.border-radius-xxs {
  border-radius: 4px;
}

.border-radius-xs {
  border-radius: 8px;
}

.border-none {
  border: 0;
}

// Text Styles

.text-decoration-none {
  text-decoration: none !important;
}
